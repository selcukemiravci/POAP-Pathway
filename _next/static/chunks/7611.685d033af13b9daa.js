"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7611],{97611:function(t,i,n){n.d(i,{SignerConnector:function(){return d}});var s=n(42009),e=n(16074),a=n(27021),h=n(66095),r=n(4646);n(65007);var c=new WeakMap,o=new WeakMap;class d extends a.C{constructor(t){super(),(0,e._)(this,c,{writable:!0,value:void 0}),(0,e._)(this,o,{writable:!0,value:void 0}),(0,s._)(this,"onChainChanged",t=>{let i=(0,r.n)(t),n=!this.options.chains.find(t=>t.chainId===i);this.emit("change",{chain:{id:i,unsupported:n}})}),this.options=t}async connect(t){t.chainId&&this.switchChain(t.chainId);let i=await this.getSigner(),n=await i.getAddress();return n}async disconnect(){(0,e.a)(this,c,void 0),(0,e.a)(this,o,void 0)}async getAddress(){let t=await this.getSigner();if(!t)throw Error("No signer found");return await t.getAddress()}async isConnected(){try{let t=await this.getAddress();return!!t}catch{return!1}}async getProvider(){return(0,e.b)(this,c)||(0,e.a)(this,c,(0,h.c$)(this.options.chain,{clientId:this.options.clientId,secretKey:this.options.secretKey})),(0,e.b)(this,c)}async getSigner(){if(!(0,e.b)(this,o)){let t=await this.getProvider();(0,e.a)(this,o,u(this.options.signer,t))}return(0,e.b)(this,o)}async switchChain(t){let i=this.options.chains.find(i=>i.chainId===t);if(!i)throw Error(`Chain not found for chainId ${t}, please add it to the chains property when creating this wallet`);(0,e.a)(this,c,(0,h.c$)(i,{clientId:this.options.clientId,secretKey:this.options.secretKey})),(0,e.a)(this,o,u(this.options.signer,(0,e.b)(this,c))),this.onChainChanged(t)}async setupListeners(){}updateChains(t){this.options.chains=t}}function u(t,i){return i?t.connect(i):t}}}]);